import{k}from"./lit-element-D5KKan5q.js";import{o as m}from"./query-assigned-elements-uEuc3rg8.js";import{T as h}from"./index-DkT4B2wP.js";import{T as f}from"./index-CaKoMWkH.js";import{A as c,T as C}from"./menusection.constants-CectB7Mc.js";import{C as d}from"./index-C9z9WAEj.js";import{R as A}from"./roles-Ch6n0tol.js";var p=Object.defineProperty,u=(n,e,s,i)=>{for(var t=void 0,r=n.length-1,l;r>=0;r--)(l=n[r])&&(t=l(e,s,t)||t);return t&&p(e,s,t),t};const o=class o extends d{constructor(){super(...arguments),this.handleClick=e=>{this.toggleCheckedState(e.target)}}connectedCallback(){super.connectedCallback(),this.setAttribute("role",A.GROUP),this.addEventListener("click",this.handleClick)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("click",this.handleClick)}toggleCheckedState(e){if(!(e instanceof HTMLElement)||e.hasAttribute("disabled"))return;const s=e.tagName.toLowerCase(),i=e.getAttribute("aria-checked")===c.TRUE;switch(s){case f:e.setAttribute("aria-checked",String(!i));break;case h:if(i)return;this.radios.forEach(t=>{const r=t===e?c.TRUE:c.FALSE;t.setAttribute("aria-checked",r)});break}}render(){return k`<slot></slot>`}};o.styles=[...d.styles];let a=o;u([m({selector:`${h}:not([disabled])`})],a.prototype,"radios");a.register(C);
