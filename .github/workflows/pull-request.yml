name: Pull Request CI
run-name: ${{ github.actor }} is running Pull Request CI

on:
  pull_request_target:
    branches:
      - main
      # do not add "labeled" type here, it will trigger the workflow on every label change (double run cause of mergeable.yml)
    types: [opened, reopened, synchronize]
  workflow_dispatch:

env:
  rid: ${{ github.run_id }}-${{ github.run_number }}

jobs:
  validate-action:
    name: Validate Action
    runs-on: ubuntu-latest

    steps:
      - name: Validate Labels
        run: |
          HEAD_REPO=${{ github.event.pull_request.head.repo.full_name }}
          BASE_REPO=${{ github.event.pull_request.base.repo.full_name }}
          FROM_BASE=0; [ "$HEAD_REPO" == "$BASE_REPO" ] && FROM_BASE=1

          HAS_VALIDATED_LABEL=${{ contains(github.event.pull_request.labels.*.name, 'validated') || contains(github.event.workflow_run.labels.*.name, 'validated') || contains(github.event.label.name, 'validated') }}
          VALIDATED=0; [ "$HAS_VALIDATED_LABEL" == "true" ] && VALIDATED=1

          echo github.event
          

          
          echo from base $FROM_BASE
          echo validated $VALIDATED

          if [[ $FROM_BASE == 1 || $VALIDATED == 1 ]]
          then
            echo 'Pull request is validated, continuing.'
            exit 0
          else
            echo 'Pull request is not validated, exiting. To validate, add the "validated" label or reach out to the Core Team and re-run the workflow.'
            exit 1
          fi

  initialize:
    name: Initialize
    needs: validate-action
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
          
      - name: Validate Dependencies
        id: validate-dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: yarn

      - name: Cache Dependencies
        uses: actions/cache@v4
        if: steps.validate-dependencies.outputs.cache-hit != 'true'
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

  generate-package-matrix:
    name: Generate Package Matrix
    needs: initialize
    runs-on: ubuntu-latest

    outputs:
      packages: ${{ steps.generate-package-matrix.outputs.packages }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
          
      - name: Uncache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Synchronize Packages
        run: yarn
         
      - name: Update Main Branch
        run: |
          git fetch origin main --unshallow

      # Build Automation Tooling (Telemetry as precondition)
      - name: Build Automation Tooling
        run: yarn telemetry build && yarn automation build:cli

      - id: generate-package-matrix
        name: Generate Package Matrix
        run: echo "packages=$(yarn md-automation -- --command get-packages --changed ${{ github.event.pull_request.base.sha }} --dependent)" >> $GITHUB_OUTPUT

      - name: Display Package Matrix
        run: echo "generated package matrix - ${{ steps.generate-package-matrix.outputs.packages }}"

  build:
    name: Build
    needs: initialize
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
          
      - name: Uncache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Synchronize Packages
        run: yarn

      - name: Build
        run: yarn build
        env:
          MOMENTUM_METRICS_API_KEY: ${{ secrets.MOMENTUM_METRICS_API_KEY }}

      - name: Cache Dist
        uses: actions/cache@v4
        with:
          path: '**/dist'
          key: dist-${{ env.rid }}

  analyze-root:
    name: Analyze Root
    needs: initialize
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
          
      - name: Uncache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Synchronize Packages
        run: yarn

      - name: Analyze
        run: yarn analyze:root

  analyze-prebuild:
    name: ( ${{ matrix.package }} / ${{ matrix.os }} ) Analyze - Prebuild
    needs: [analyze-root, generate-package-matrix, build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        package: ${{ fromJson(needs.generate-package-matrix.outputs.packages) }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
          
      - name: Uncache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Uncache Dist
        uses: actions/cache@v4
        with:
          path: '**/dist'
          key: dist-${{ env.rid }}

      - name: Synchronize Packages
        run: yarn

      - name: Analyze - Prebuild
        run: yarn workspace ${{ matrix.package }} analyze:prebuild

  test-prebuild:
    name: ( ${{ matrix.package }} / ${{ matrix.os }} ) Test - Prebuild
    needs: [analyze-root, generate-package-matrix, build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        package: ${{ fromJson(needs.generate-package-matrix.outputs.packages) }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
          
      - name: Uncache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
      
      - name: Uncache Dist
        uses: actions/cache@v4
        with:
          path: '**/dist'
          key: dist-${{ env.rid }}

      - name: Synchronize Packages
        run: yarn

      - name: Test - Prebuild
        run: yarn workspace ${{ matrix.package }} test:prebuild

  analyze-postbuild:
    name: ( ${{ matrix.package }} / ${{ matrix.os }} ) Analyze - Postbuild
    needs: [analyze-root, generate-package-matrix, build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        package: ${{ fromJson(needs.generate-package-matrix.outputs.packages) }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
          
      - name: Uncache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Uncache Dist
        uses: actions/cache@v4
        with:
          path: '**/dist'
          key: dist-${{ env.rid }}

      - name: Synchronize Packages
        run: yarn

      - name: Analyze - Postbuild
        run: yarn workspace ${{ matrix.package }} analyze:postbuild

  test-postbuild:
    name: ( ${{ matrix.package }} / ${{ matrix.os }} ) Test - Postbuild
    needs: [analyze-root, generate-package-matrix, build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        package: ${{ fromJson(needs.generate-package-matrix.outputs.packages) }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
          
      - name: Uncache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Uncache Dist
        uses: actions/cache@v4
        with:
          path: '**/dist'
          key: dist-${{ env.rid }}

      - name: Synchronize Packages
        run: yarn
        
      - name: Test - Postbuild
        run: yarn workspace ${{ matrix.package }} test:postbuild

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() && matrix.package == '@momentum-design/components' }}
        with:
          name: playwright-report
          path: packages/components/playwright-report/
          retention-days: 30
