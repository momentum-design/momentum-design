---
import DocsLayout from '../../../../layouts/DocsLayout.astro';

export async function getStaticPaths() {
  const pages = await Astro.glob('../../../../../../*/docs/markdown/*.md');
  return pages.map((page) => {
    const paths = page.file?.split('/');
    const fileName = paths.pop();
    // go back 2 directories to get the package name
    paths.pop();
    paths.pop();
    const subPackage = paths.pop();
    return {
      params: { slug: `${subPackage}/${fileName?.replaceAll('.md', '-md')}` },
      props: { page: { ...page, compiledContent: page.compiledContent().replaceAll('.md', '-md') } },
    };
  });
}
const { page } = Astro.props;
---

<DocsLayout frontmatter={{ description: '', title: '', layout: '' }} headings={page.getHeadings()}>
  <!-- Because we need to replace the contents of the markdown files we import and
   Astro doesn't provide a way to recompile the Component that it returns from the getStaticPaths,
   we're using the compiledContent instead (which returns HTML as string), replace the things we
   need to replace, and use the fragment to inject the HTML.
  -->
  <Fragment set:html={page.compiledContent} />
</DocsLayout>
